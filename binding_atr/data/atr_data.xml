<?xml version="1.0" encoding="utf-8"?>
<odoo>
	<data noupdate="0">
		<record id="atr_partner" model="atr">
	        <field name="name">Conexión Contactos</field>
	        <field name="type_atr">partner</field>
	        <field name="sql">SELECT
    t.rif,
    firm_name AS contribuyente,
    CASE
        WHEN natural_person THEN 'NATURAL'
        ELSE 'JURIDICO'
    END AS tipo_contribuyente,
    CASE
        WHEN t.active THEN 'ACTIVO'
        ELSE 'INACTIVO'
    END AS estatus,
    u.email AS email,
    u.correo_secundario AS email2,
    u.celular AS tlf_celular,
    u.local AS tlf_local,
    t.id
FROM taxpayer t
LEFT JOIN appweb.users_web u ON u.id_taxpayer = t.id
WHERE firm_name not ilike '%prueba%' AND u.id IS NOT NULL
-- AND t.active AND NOT deleted -- SOLO PARA CONTRIBUYENTES ACTIVOS
ORDER BY contribuyente
OFFSET {offset} LIMIT {limit}</field>
	        <field name="sql_count">SELECT COUNT(*)
FROM taxpayer t
LEFT JOIN appweb.users_web u ON u.id_taxpayer = t.id
WHERE firm_name not ilike '%prueba%' AND u.id IS NOT NULL
-- AND t.active AND NOT deleted -- SOLO PARA CONTRIBUYENTES ACTIVOS</field>
	    </record>
	    <record id="atr_payment" model="atr">
	        <field name="name">Conexión a Planillas de Pagos</field>
	        <field name="type_atr">payment</field>
	        <field name="sql">SELECT
    rif,
    firm_name AS contribuyente,
    invoice_number AS planilla,
    total_amount AS monto,
    emision_date AS emision,
    invoice.expiry_date AS vencimiento,
    CASE
        WHEN invoice_type = 1 THEN 'TASAS'
        ELSE 'IMPUESTOS'
    END AS tipo_planilla,
    tax_account_number AS cuenta,
    CASE
        WHEN tax_type.id = 4 THEN 'PUBLICIDAD'
        WHEN tax_type.id = 5 THEN 'CATASTRO MUNICIPAL'
        WHEN tax_type.id = 6 THEN 'INGENIERÍA MUNICIPAL'
        WHEN tax_type.id = 7 THEN 'REGISTRO Y NOTARÍA'
        WHEN tax_type.id = 8 THEN
	CASE WHEN is_public_show THEN 'ESPECTÁCULOS PÚBLICOS' ELSE 'TASA ADMINISTRATIVA' END
        ELSE tax_type.name
    END AS tipo_impuesto,
    CASE
        WHEN (invoice.status = 4 OR invoice.status = 6) THEN 'PAGADA'
        ELSE 'PENDIENTE'
    END AS estatus_planilla
FROM invoice
LEFT JOIN appweb.tax ON invoice.id_tax = tax.id
LEFT JOIN taxpayer ON tax.id_taxpayer = taxpayer.id
LEFT JOIN invoice_fee ON invoice_fee.id_invoice = invoice.id
LEFT JOIN fee_type ON invoice_fee.id_fee_type = fee_type.id
LEFT JOIN tecnologia.fee_tax ON fee_tax.id_fee_type = fee_type.id
LEFT JOIN tax_type ON CASE WHEN tax.id_tax_type ISNULL THEN fee_tax.id_tax_type ELSE tax.id_tax_type END = tax_type.id
WHERE invoice.status IN(1,4,6) AND firm_name not ilike '%prueba%'
ORDER BY contribuyente
OFFSET {offset} LIMIT {limit}</field>
	        <field name="sql_count">SELECT COUNT(*)
FROM invoice
LEFT JOIN appweb.tax ON invoice.id_tax = tax.id
LEFT JOIN taxpayer ON tax.id_taxpayer = taxpayer.id
LEFT JOIN invoice_fee ON invoice_fee.id_invoice = invoice.id
LEFT JOIN fee_type ON invoice_fee.id_fee_type = fee_type.id
LEFT JOIN tecnologia.fee_tax ON fee_tax.id_fee_type = fee_type.id
LEFT JOIN tax_type ON CASE WHEN tax.id_tax_type ISNULL THEN fee_tax.id_tax_type ELSE tax.id_tax_type END = tax_type.id
WHERE invoice.status IN(1,4,6) AND firm_name not ilike '%prueba%'</field>
	    </record>
        <record id="atr_update_address" model="atr">
            <field name="name">Conexión a Dirección de Contribuyentes</field>
            <field name="type_atr">update_address</field>
            <field name="sql">SELECT 
    TRIM(t.rif),
    firm_name AS contribuyente, 
    regexp_replace(COALESCE(p.name,''), ';', ':', 'g') AS parroquia, 
    regexp_replace(COALESCE(s.name,''), ';', ':', 'g') AS sector,
    CONCAT(regexp_replace(regexp_replace(a.address,';',':'),'\n',' '),
       regexp_replace(a.street,'\n',' '),' ',
       regexp_replace(a.name,'\n',' '),' ',
       regexp_replace(a.floor_number,'\n',' '),' ',
       regexp_replace(a.unit_number,'\n',' ')) AS direccion,
    lat,
    long
FROM tax tx
INNER JOIN taxpayer t ON t.id = tx.id_taxpayer 
INNER JOIN tax_address ta ON ta.id_tax = tx.id
INNER JOIN address a ON a.id = ta.id_address AND a.main
INNER JOIN parish p on p.id = a.id_parish
LEFT JOIN sector s on s.id = a.id_sector 
LEFT JOIN tecnologia.inf_additional_statement_form_ae ias ON ias.id_tax = tx.id AND (ias.id IN (SELECT max(inf_additional_statement_form_ae.id)
           FROM tecnologia.inf_additional_statement_form_ae
          GROUP BY id_tax))
WHERE firm_name not ilike '%prueba%' AND NOT tx.canceled AND NOT tx.removed
AND TRIM(t.rif) = {vat} -- PARA UN CONTRIBUYENTE EN ESPECÍFICO
AND t.active AND NOT deleted -- SOLO PARA CONTRIBUYENTES ACTIVOS
ORDER BY firm_name, tax_account_number</field>
            <field name="sql_count">SELECT COUNT(*)
FROM res_partner
WHERE vat IS NOT NULL AND active = True AND company_id = {company_id}</field>
        </record>
        <record id="atr_tax" model="atr">
            <field name="name">Conexión a Declaraciones de Impuestos</field>
            <field name="type_atr">tax</field>
            <field name="sql">SELECT transaction.id,
rif,
firm_name AS contribuyente,
tax_account_number AS planilla,
transaction.amount AS monto,
concept,
application_date AS emision,
transaction.expiry_date AS vencimiento,
 'IMPUESTOS',
tax_type.name as tipo_impuesto,
CASE
    WHEN (transaction.debt_status = 1 OR transaction.debt_status = 2) THEN 'PENDIENTE'
    ELSE 'PAGADA'
END AS estatus_planilla,
tax_classifier.code,
tax_classifier.name,
tax_classifier.aliquot,
sum(statement_detail.income)
FROM transaction
LEFT JOIN public.tax ON transaction.id_tax = tax.id
LEFT JOIN taxpayer ON tax.id_taxpayer = taxpayer.id
LEFT JOIN tax_type ON  tax.id_tax_type  = tax_type.id
LEFT JOIN statement ON transaction.id_statement = statement.id
LEFT JOIN statement_detail ON statement.id = statement_detail.id_statement
LEFT JOIN tax_classifier  ON tax_classifier.id=statement_detail.id_classifier_tax
WHERE transaction.canceled=false AND taxpayer.firm_name not ilike '%prueba%'
and transaction.id_transaction_type=1
--AND tax.tax_account_number = '030016601'
GROUP BY transaction.id,
rif,
contribuyente,
planilla,
monto,
concept,
emision,
vencimiento,
tipo_impuesto,
estatus_planilla,
tax_classifier.code,
tax_classifier.name,
tax_classifier.aliquot
ORDER BY contribuyente ASC
OFFSET {offset} LIMIT {limit}</field>
            <field name="sql_count">SELECT COUNT(*) FROM
(SELECT transaction.id,
rif,
firm_name AS contribuyente,
tax_account_number AS planilla,
transaction.amount AS monto,
concept,
application_date AS emision,
transaction.expiry_date AS vencimiento,
 'IMPUESTOS',
tax_type.name as tipo_impuesto,
CASE
    WHEN (transaction.debt_status = 1 OR transaction.debt_status = 2) THEN 'PENDIENTE'
    ELSE 'PAGADA'
END AS estatus_planilla,
tax_classifier.code,
tax_classifier.name,
tax_classifier.aliquot,
sum(statement_detail.income)
FROM transaction
LEFT JOIN public.tax ON transaction.id_tax = tax.id
LEFT JOIN taxpayer ON tax.id_taxpayer = taxpayer.id
LEFT JOIN tax_type ON  tax.id_tax_type  = tax_type.id
LEFT JOIN statement ON transaction.id_statement = statement.id
LEFT JOIN statement_detail ON statement.id = statement_detail.id_statement
LEFT JOIN tax_classifier  ON tax_classifier.id=statement_detail.id_classifier_tax
WHERE transaction.canceled=false AND taxpayer.firm_name not ilike '%prueba%'
and transaction.id_transaction_type=1
--AND tax.tax_account_number = '030016601'
GROUP BY transaction.id,
rif,
contribuyente,
planilla,
monto,
concept,
emision,
vencimiento,
tipo_impuesto,
estatus_planilla,
tax_classifier.code,
tax_classifier.name,
tax_classifier.aliquot) AS tax</field>
        </record>
	</data>
</odoo>